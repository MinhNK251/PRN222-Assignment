@page
@model AirWaterStore.Web.Pages.Games.IndexModel
@{
    ViewData["Title"] = "Games";
}

<h1>Game Store</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <form method="get" class="form-inline">
            <input type="text" name="searchString" value="@Model.SearchString" class="form-control mr-2" placeholder="Search games..." />
            <button type="submit" class="btn btn-primary">Search</button>
            <a asp-page="/Games/Index" class="btn btn-secondary ml-2">Clear</a>
        </form>
    </div>
    @if (Model.IsStaff)
    {
        <div class="col-md-6 text-right">
            <a asp-page="/Admin/Games/Create" class="btn btn-success">Add New Game</a>
        </div>
    }
</div>

@if (Model.SuccessMessage != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @Model.SuccessMessage
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="row">
    @foreach (var game in Model.Games)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                @if (!string.IsNullOrEmpty(game.ThumbnailUrl))
                {
                    <img src="@game.ThumbnailUrl" class="card-img-top" alt="@game.Title" style="height: 200px; object-fit: cover;">
                }
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@game.Title</h5>
                    <p class="card-text">
                        <small class="text-muted">@game.Genre</small><br />
                        @if (game.Description?.Length > 100)
                        {
                            @(game.Description.Substring(0, 100))
                        }
                        else
                        {
                            @game.Description
                        }
                    </p>
                    <p class="card-text mt-auto">
                        <strong>$@game.Price.ToString("F2")</strong>
                        <span class="badge badge-@(game.Quantity > 0 ? "success" : "danger") ml-2">
                            @(game.Quantity > 0 ? $"{game.Quantity} in stock" : "Out of stock")
                        </span>
                    </p>
                    <div class="btn-group" role="group">
                        <a asp-page="/Games/Details" asp-route-id="@game.GameId" class="btn btn-info btn-sm">View Details</a>
                        @if (Model.IsCustomer && game.Quantity > 0)
                        {
                            <form method="post" asp-page-handler="AddToCart" class="d-inline">
                                <input type="hidden" name="gameId" value="@game.GameId" />
                                <button type="submit" class="btn btn-primary btn-sm">Add to Cart</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-page="/Games/Index" asp-route-currentPage="@(Model.CurrentPage - 1)" asp-route-searchString="@Model.SearchString">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" asp-page="/Games/Index" asp-route-currentPage="@i" asp-route-searchString="@Model.SearchString">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-page="/Games/Index" asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-searchString="@Model.SearchString">Next</a>
        </li>
    </ul>
</nav>